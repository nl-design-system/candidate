name: Changeset status

on:
  workflow_run:
    workflows:
      # Triggered by the Continuous Integration workflow
      - Continuous Integration
    types:
      # Start running parallel to the Continuous Integration workflow
      - requested

jobs:
  changeset-status:
    runs-on: ubuntu-latest
    env:
      # Used to start and complete the check run and to check out the correct ref using actions/checkout
      HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
      # Used as the name of the check run
      NAME: ${{ github.job }}
    steps:
      - name: Create GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # 2.1.4
        with:
          app-id: ${{ vars.NL_DESIGN_SYSTEM_BOT_APP_ID }}
          private-key: ${{ secrets.NL_DESIGN_SYSTEM_BOT_PRIVATE_KEY }}
          # Read the contents of the repo
          permission-contents: read
          # Write the result back using the Checks API
          permission-checks: write

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          # Check out the same ref that Continuous Integration ran for
          ref: ${{ env.HEAD_SHA }}
          # Fetch all history for all branches so that `changeset:status` in package.json#scripts can determine if
          # a changeset is needed or not.
          fetch-depth: 0

      - name: Start check run
        run: |
          # Create timestamp
          STARTED_AT=$(date --utc +%Y-%m-%dT%H:%M:%SZ)

          # Start a new check run
          CHECK_RUN_ID=$(
            gh api "repos/${GITHUB_REPOSITORY}/check-runs" \
              --method POST \
              --header "Accept: application/vnd.github+json" \
              --header "X-GitHub-Api-Version: 2022-11-28" \
              --field "head_sha=${HEAD_SHA}" \
              --field "name=${NAME}" \
              --field "status=in_progress" \
              --field "started_at=${STARTED_AT}" \
              --jq ".id"
          )

          # Persist the check run id in the environment
          echo "CHECK_RUN_ID=${CHECK_RUN_ID}" >> "${GITHUB_ENV}"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Install pnpm package manager
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0

      - name: Audit dependencies
        run: pnpm audit --audit-level high

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Check if a changeset is needed
        id: changeset
        # ONLY run this step if:
        #
        # 1. the branch was not created by the Changeset Action itself
        # 2. the branch was not created by Dependabot
        if: ${{ !startsWith(github.event.workflow_run.head_branch, 'changeset-release/') && github.actor != 'dependabot[bot]' }}
        run: pnpm run changeset:status

      - name: Complete check run
        # Always run this step, even if the previous step was a failure
        if: ${{ always() }}
        run: |
          # Create timestamp
          COMPLETED_AT=$(date --utc +%Y-%m-%dT%H:%M:%SZ)

          # Complete the existing check run
          gh api "repos/${GITHUB_REPOSITORY}/check-runs/${CHECK_RUN_ID}" \
            --method PATCH \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --field "head_sha=${HEAD_SHA}" \
            --field "status=completed" \
            --field "completed_at=${COMPLETED_AT}" \
            --field "conclusion=${CONCLUSION}"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          CONCLUSION: ${{ steps.changeset.outcome }}
